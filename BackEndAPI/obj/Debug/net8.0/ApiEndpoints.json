[
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "BackEndAPI.Core.Dtos.Auth.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEndAPI.Core.Dtos.Auth.LoginServiceResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "Me",
    "RelativePath": "api/Auth/me",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "BackEndAPI.Core.Dtos.Auth.MeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEndAPI.Core.Dtos.Auth.LoginServiceResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDto",
        "Type": "BackEndAPI.Core.Dtos.Auth.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "SeedRoles",
    "RelativePath": "api/Auth/seed-roles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "UpdateRole",
    "RelativePath": "api/Auth/update-role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateRoleDto",
        "Type": "BackEndAPI.Core.Dtos.Auth.UpdateRoleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "GetUserNamesList",
    "RelativePath": "api/Auth/usernames",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "GetUsersList",
    "RelativePath": "api/Auth/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BackEndAPI.Core.Dtos.Auth.UserInfoResult, BackEndAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.AuthController",
    "Method": "GetUserDetailsByUserName",
    "RelativePath": "api/Auth/users/{userName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEndAPI.Core.Dtos.Auth.UserInfoResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.LogsController",
    "Method": "GetLogs",
    "RelativePath": "api/Logs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BackEndAPI.Core.Dtos.Log.GetLogDto, BackEndAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.LogsController",
    "Method": "GetMyLogs",
    "RelativePath": "api/Logs/mine",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BackEndAPI.Core.Dtos.Log.GetLogDto, BackEndAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.MessagesController",
    "Method": "GetMessages",
    "RelativePath": "api/Messages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BackEndAPI.Core.Dtos.Message.GetMessageDto, BackEndAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.MessagesController",
    "Method": "CreateNewMessage",
    "RelativePath": "api/Messages/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createMessageDto",
        "Type": "BackEndAPI.Core.Dtos.Message.CreateMessageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.MessagesController",
    "Method": "GetMyMessages",
    "RelativePath": "api/Messages/mine",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BackEndAPI.Core.Dtos.Message.GetMessageDto, BackEndAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEndAPI.Controllers.TestController",
    "Method": "GetAdminData",
    "RelativePath": "api/Test/get-admin-role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.TestController",
    "Method": "GetManagerData",
    "RelativePath": "api/Test/get-manager-role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.TestController",
    "Method": "GetOwnerData",
    "RelativePath": "api/Test/get-owner-role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.TestController",
    "Method": "GetPublicData",
    "RelativePath": "api/Test/get-public",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEndAPI.Controllers.TestController",
    "Method": "GetUserData",
    "RelativePath": "api/Test/get-user-role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]